{"version":3,"sources":["../../bower_components/almond/almond.js","modules/Point.js","modules/BezierPoint.js","modules/Curve.js","main.js"],"names":["this","$","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Point","x","y","color","context","r","ctx","draw","fillStyle","beginPath","arc","Math","PI","closePath","fill","BezierPoint","cpDist","position","cp1","cp2","collapsed","collapse","move","v1x","v1y","v2x","v2y","setColor","lineWidth","moveTo","lineTo","stroke","Curve","interval","canvas","width","points","height","cw","ch","canvasEvents","createLUT","xGetY","frame","tolerance","iMin","iMax","key","xTarget","xCurrent","lookupX","abs","round","lookupY","p1","p2","pct","t","pow","dist","dragReady","dragCP","draging","_this","on","evt","clientX","offset","left","clientY","top","sqrt","css","keys","deltaW","deltaH","posX","floor","posY","text","temp","preventDefault","addPoint","offsetX","offsetY","sort","a","b","clearRect","strokeStyle","pP","bezierCurveTo","window","addEventListener","keyCode"],"mappings":"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A/G,SACA2F,GAAA3F,EAAAgH,WAGA9D,IAIA3H,EAAA,QAAA,iBAAA,SAAA2H,GCncA,MAAAA,KAIA3H,EAAA,SAAA;;;;;;;;AJNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvpcA,ADqcA;ACpcA;AACA;AACA;AACA;AACA;AACA","file":"curves.min.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","define('modules/Point',[],function(){\n\n\tfunction Point(x, y, color, context) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.r = 2;\n\t\tthis.color = color;\n\t\tthis.ctx = context;\n\t}\n\tPoint.prototype.draw = function() {\n\t\tthis.ctx.fillStyle = this.color;\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.arc(this.x, this.y, this.r, 0, Math.PI*2, false);\n\t\tthis.ctx.closePath();\n\t\tthis.ctx.fill();\n\t};\n\n\treturn Point;\n\n});\n\n","define('modules/BezierPoint',['modules/Point'], function(Point){\n\n\tfunction BezierPoint(x, y, context, color, cpDist) {\n\n\t\tthis.cpDist = cpDist;\n\n\t\tthis.color = color;\n\n\t\tthis.position = new Point(x, y, this.color, context);\n\t\tthis.cp1 = new Point(x-this.cpDist, y, this.color, context);\n\t\tthis.cp2 = new Point(x+this.cpDist, y, this.color, context);\n\n\t\tthis.ctx = context;\n\t\tthis.r = 2;\n\n\t\tthis.collapsed = false;\n\n\t}\n\tBezierPoint.prototype.collapse = function() {\n\t\t\n\t\tif (!this.collapsed) {\n\t\t\tthis.collapsed = true;\n\t\t\tthis.cp1.x = this.cp2.x = this.position.x;\n\t\t\tthis.cp1.y = this.cp2.y = this.position.y;\n\t\t} else {\n\t\t\tthis.collapsed = false;\n\t\t\tthis.cp1.x = this.position.x - this.cpDist;\n\t\t\tthis.cp2.x = this.position.x + this.cpDist;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.move = function() {\n\t\tif (!this.collapsed) {\n\t\t\tthis.v1x = this.cp1.x - this.position.x;\n\t\t\tthis.v1y = this.cp1.y - this.position.y;\n\t\t\tthis.v2x = this.cp2.x - this.position.x;\n\t\t\tthis.v2y = this.cp2.y - this.position.y;\n\t\t} else {\n\t\t\tthis.v1x = this.v1y = this.v2x = this.v2y = 0;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.setColor = function(color) {\n\t\tthis.position.color = color;\n\t\tthis.cp1.color = color;\n\t\tthis.cp2.color = color;\n\t};\n\tBezierPoint.prototype.draw = function() {\n\n\t\tthis.ctx.lineWidth = 0.2;\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp1.x, this.cp1.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp2.x, this.cp2.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.position.draw();\n\t\tthis.cp1.draw();\n\t\tthis.cp2.draw();\n\n\t};\n\n\treturn BezierPoint;\n\n});\n\n","define('modules/Curve',['modules/BezierPoint', 'jquery'], function(BezierPoint, $){\n\n\tfunction Curve(context, interval, cpDist) {\n\n\t\tthis.cpDist = cpDist ? cpDist : context.canvas.width * 0.2;\n\n\t\tthis.color = '#f00';\n\n\t\tthis.points = [\n\t\t\tnew BezierPoint(0, context.canvas.height, context, this.color, this.cpDist),\n\t\t\tnew BezierPoint(context.canvas.width, 0, context, this.color, this.cpDist)\n\t\t];\n\n\t\tthis.ctx = context;\n\t\tthis.cw = context.canvas.width;\n\t\tthis.ch = context.canvas.height;\n\n\t\tthis.interval = interval;\n\n\t\tthis.canvasEvents();\n\t\tthis.createLUT();\n\t\tthis.draw();\n\n\t}\n\tCurve.prototype.xGetY = function(frame) {\n\n\t\tvar tolerance = 0.0001;\n\t\t\n\t\tvar iMin = 0;\n\t\tvar iMax = 5000;\n\t\tvar key = (iMin+iMax)/2;\n\n\t\tvar xTarget = frame/this.interval;\n\t\tvar xCurrent = this.lookupX[key];\n\n\t\tvar i = 0;\n\n\t\twhile (Math.abs(xTarget-xCurrent) > tolerance){\n\t\t\ti++;\n\t\t\t\n\t\t\tif (xCurrent > xTarget) {\n\t\t\t\tiMax = key;\n\t\t\t} else if (xCurrent < xTarget) {\n\t\t\t\tiMin = key;\n\t\t\t}\n\t\t\tkey = Math.round((iMin+iMax)/2);\n\t\t\txCurrent = this.lookupX[key];\n\n\t\t\tif (i > 20) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.lookupY[key];\n\n\t};\n\tCurve.prototype.createLUT = function() {\n\t\t\n\t\tthis.lookupX = [];\n\t\tthis.lookupY = [];\n\n\t//\tthis.ctx.fillStyle = '#a50';\n\n\t\t//Percent Based Tesselation\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tvar p1 = this.points[i-1];\n\t\t\tvar p2 = this.points[i];\n\t\t\tvar pct = (p2.position.x/this.cw) - (p1.position.x/this.cw);\n\t\t\tfor (var t = 0; t < 1; t+=1/(5000*pct)) {\n\t\t\t\tvar x = (Math.pow((1-t),3)*p1.position.x) + (3*Math.pow((1-t),2)*t*p1.cp2.x) + (3*(1-t)*Math.pow(t,2)*p2.cp1.x) + (Math.pow(t,3)*p2.position.x);\n\t\t\t\tvar y = (Math.pow((1-t),3)*p1.position.y) + (3*Math.pow((1-t),2)*t*p1.cp2.y) + (3*(1-t)*Math.pow(t,2)*p2.cp1.y) + (Math.pow(t,3)*p2.position.y);\n\t\t\t\tthis.lookupX.push(x/this.cw);\n\t\t\t\tthis.lookupY.push(-y/this.ch+1);\n\t//\t\t\tthis.ctx.fillRect(x, y, 3, 3);\n\t\t\t}\n\t\t}\n\n\t};\n\tCurve.prototype.canvasEvents = function() {\n\n\t\tvar x,\n\t\t\ty,\n\t\t\tdist,\n\t\t\tdragReady,\n\t\t\tdragCP,\n\t\t\tdraging;\n\n\t\tvar _this = this;\n\t\t\n\t\t$(this.ctx.canvas).on('mousemove', function(evt){\n\n\t\t\tx = evt.clientX - $(this).offset().left;\n\t\t\ty = evt.clientY - $(this).offset().top;\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\n\t\t\t\tif (!draging) {\n\n\t\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdist = Math.sqrt((x-p.cp1.x)*(x-p.cp1.x) + (y-p.cp1.y)*(y-p.cp1.y));\n\t\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\tdragCP = 'cp1';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdist = Math.sqrt((x-p.cp2.x)*(x-p.cp2.x) + (y-p.cp2.y)*(y-p.cp2.y));\n\t\t\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\t\tdragCP = 'cp2';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(this).css('cursor', 'initial');\n\t\t\t\t\t\t\t\tdragReady = false;\n\t\t\t\t\t\t\t\tdragCP = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (keys[18]) {\n\t\t\t\tvar deltaW = _this.cw / 20;\n\t\t\t\tvar deltaH = _this.ch/ 10;\n\n\t\t\t\tvar posX = Math.floor((x+deltaW/2) / deltaW);\n\t\t\t\tvar posY = Math.floor((y+deltaH/2) / deltaH);\n\n\t\t\t\tx = deltaW * posX;\n\t\t\t\ty = deltaH * posY;\n\t\t\t}\n\n\t\t\t$('span').text('X: '+ x +', Y: '+ y);\n\n\t\t\tif (draging) {\n\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t_this.points[dragReady].cp1.x = x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t}\n\t\t\t\t} else if (dragCP == 'cp2') {\n\n\t\t\t\t\t_this.points[dragReady].cp2.x = x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t_this.points[dragReady].position.x = x;\n\t\t\t\t\t_this.points[dragReady].position.y = y;\n\n\t\t\t\t\tif (dragReady === 0) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (dragReady == _this.points.length-1) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t}\n\n\t\t\t\t\t_this.points[dragReady].cp1.x = _this.points[dragReady].position.x + _this.points[dragReady].v1x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = _this.points[dragReady].position.y + _this.points[dragReady].v1y;\n\t\t\t\t\t_this.points[dragReady].cp2.x = _this.points[dragReady].position.x + _this.points[dragReady].v2x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = _this.points[dragReady].position.y + _this.points[dragReady].v2y;\n\n\t\t\t\t\tvar temp;\n\n\t\t\t\t\tif (_this.points[dragReady-1] && _this.points[dragReady+1]) {\n\t\t\t\t\t\tif (_this.points[dragReady].position.x > _this.points[dragReady+1].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady+1];\n\t\t\t\t\t\t\t_this.points[dragReady+1] = temp;\n\t\t\t\t\t\t\tdragReady++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (_this.points[dragReady-1].position.x > _this.points[dragReady].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady-1];\n\t\t\t\t\t\t\t_this.points[dragReady-1] = temp;\n\t\t\t\t\t\t\tdragReady--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_this.draw();\n\t\t\t}\n\n\t\t}).on('mousedown', function(evt){\n\t\t\tevt.preventDefault();\n\n\t\t\tif (dragReady || dragReady === 0) {\n\t\t\t\tdraging = true;\n\t\t\t} else {\n\t\t\t\tif (dist > 5) {\n\t\t\t\t\tdragReady = _this.addPoint(x, y);\n\t\t\t\t\tdraging = true;\n\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t_this.draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).on('mouseup', function(evt){\n\n\t\t\tdraging = false;\n\t\t\tif (dist > 5) {\n\t\t\t\tdragReady = dragCP = false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\tdragReady = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.createLUT();\n\n\t\t}).on('mouseleave', function(evt){\n\n\t\t\tif (draging) {\n\t\t\t\tif (evt.offsetX < 0 || evt.offsetX > _this.cw) {\n\t\t\t\t\tif (evt.offsetX < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (evt.offsetY < 0 || evt.offsetY > _this.ch) {\n\t\t\t\t\tif (evt.offsetY < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = _this.ch;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\n\t\t\tdraging = dragReady = dragCP = false;\n\n\t\t}).on('click', function(evt){\n\t\t\tif (keys[16] && !dragCP) {\n\t\t\t\t_this.points[dragReady].collapse();\n\t\t\t\t_this.draw();\n\t\t\t\t_this.createLUT();\n\t\t\t}\n\t\t}).on('dblclick', function(evt){\n\t\t\t_this.points.splice(dragReady, 1);\n\t\t\tdraging = dragReady = dragCP = false;\n\t\t\tdist = 1000;\n\t\t\t$(this).css('cursor', 'initial');\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\t\t});\n\n\t};\n\tCurve.prototype.addPoint = function(x, y) {\n\t\t\n\t\tthis.points.push(new BezierPoint(x, y, this.ctx, this.color, this.cpDist));\n\n\t\tthis.points.sort(function(a, b){\n\t\t\treturn a.position.x - b.position.x;\n\t\t});\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tif (x == p.position.x && y == p.position.y) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t};\n\tCurve.prototype.setColor = function(color) {\n\t\t\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tthis.points[i].setColor(color);\n\t\t\tthis.color = color;\n\t\t}\n\t\tthis.draw();\n\n\t};\n\tCurve.prototype.draw = function() {\n\t\t\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\t\t\n\t\tthis.ctx.strokeStyle = '#444';\n\t\tthis.ctx.lineWidth = 1;\n\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/10)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/10)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 5; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.lineWidth = 0.5;\n\t\tfor (i = 1; i < 20; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/20)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/20)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.strokeStyle = '#fff';\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.points[0].position.x, this.points[0].position.y);\n\t\tfor (i = 1; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tvar pP = this.points[i-1];\n\t\t\tthis.ctx.bezierCurveTo(pP.cp2.x, pP.cp2.y, p.cp1.x, p.cp1.y, p.position.x, p.position.y);\n\t\t}\n\t\tthis.ctx.stroke();\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tthis.points[i].draw();\n\t\t}\n\n\t};\n\n\n\tvar keys = [];\n\twindow.addEventListener('keydown', function(e){\n\t\tkeys[e.keyCode] = true;\n\t});\n\twindow.addEventListener('keyup', function(e){\n\t\tdelete keys[e.keyCode];\n\t});\n\n\treturn Curve;\n\n});\n\n","define('main',['modules/Curve'], function(Curve){\n\t\n\treturn Curve;\n\n});\n\n"],"sourceRoot":"/source/"}