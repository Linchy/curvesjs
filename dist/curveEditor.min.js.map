{"version":3,"sources":["../../bower_components/almond/dist/almond.js","modules/Point.js","modules/BezierPoint.js","modules/Line.js","main.js"],"names":["this","$","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Point","x","y","context","r","ctx","draw","fillStyle","beginPath","arc","Math","PI","closePath","fill","BezierPoint","cpDist","position","cp1","cp2","collapsed","collapse","move","v1x","v1y","v2x","v2y","lineWidth","moveTo","lineTo","stroke","Line","interval","points","canvas","height","width","cw","ch","canvasEvents","createLUT","xGetY","frame","tolerance","iMin","iMax","key","xTarget","xCurrent","lookupX","abs","round","lookupY","p1","p2","pct","t","pow","dist","dragReady","dragCP","draging","_this","on","evt","clientX","offset","left","clientY","top","sqrt","css","keys","deltaW","deltaH","posX","floor","posY","text","temp","preventDefault","addPoint","offsetX","offsetY","sort","a","b","clearRect","strokeStyle","pP","bezierCurveTo","window","addEventListener","keyCode"],"mappings":"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","file":"curveEditor.min.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","define('modules/Point',[],function(){\n\n\tfunction Point(x, y, context) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.r = 2;\n\t\tthis.ctx = context;\n\t}\n\tPoint.prototype.draw = function() {\n\t\tthis.ctx.fillStyle = '#f00';\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.arc(this.x, this.y, this.r, 0, Math.PI*2, false);\n\t\tthis.ctx.closePath();\n\t\tthis.ctx.fill();\n\t};\n\n\treturn Point;\n\n});\n","define('modules/BezierPoint',['modules/Point'], function(Point){\n\n\tfunction BezierPoint(x, y, context, cpDist) {\n\n\t\tthis.cpDist = cpDist;\n\n\t\tthis.position = new Point(x, y, context);\n\t\tthis.cp1 = new Point(x-this.cpDist, y, context);\n\t\tthis.cp2 = new Point(x+this.cpDist, y, context);\n\n\t\tthis.ctx = context;\n\t\tthis.r = 2;\n\n\t\tthis.collapsed = false;\n\n\t}\n\tBezierPoint.prototype.collapse = function() {\n\t\t\n\t\tif (!this.collapsed) {\n\t\t\tthis.collapsed = true;\n\t\t\tthis.cp1.x = this.cp2.x = this.position.x;\n\t\t\tthis.cp1.y = this.cp2.y = this.position.y;\n\t\t} else {\n\t\t\tthis.collapsed = false;\n\t\t\tthis.cp1.x = this.position.x - this.cpDist;\n\t\t\tthis.cp2.x = this.position.x + this.cpDist;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.move = function() {\n\t\tif (!this.collapsed) {\n\t\t\tthis.v1x = this.cp1.x - this.position.x;\n\t\t\tthis.v1y = this.cp1.y - this.position.y;\n\t\t\tthis.v2x = this.cp2.x - this.position.x;\n\t\t\tthis.v2y = this.cp2.y - this.position.y;\n\t\t} else {\n\t\t\tthis.v1x = this.v1y = this.v2x = this.v2y = 0;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.draw = function() {\n\n\t\tthis.ctx.lineWidth = 0.2;\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp1.x, this.cp1.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp2.x, this.cp2.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.position.draw();\n\t\tthis.cp1.draw();\n\t\tthis.cp2.draw();\n\n\t};\n\n\treturn BezierPoint;\n\n});\n","define('modules/Line',['modules/BezierPoint', 'jquery'], function(BezierPoint, $){\n\n\tfunction Line(context, interval, cpDist) {\n\n\t\tthis.cpDist = cpDist;\n\n\t\tthis.points = [\n\t\t\tnew BezierPoint(0, context.canvas.height, context, cpDist),\n\t\t\tnew BezierPoint(context.canvas.width, 0, context, cpDist)\n\t\t];\n\n\t\tthis.ctx = context;\n\t\tthis.cw = context.canvas.width;\n\t\tthis.ch = context.canvas.height;\n\n\t\tthis.interval = interval;\n\n\t\tthis.canvasEvents();\n\t\tthis.createLUT();\n\t\tthis.draw();\n\n\t}\n\tLine.prototype.xGetY = function(frame) {\n\n\t\tvar tolerance = 0.0001;\n\t\t\n\t\tvar iMin = 0;\n\t\tvar iMax = 5000;\n\t\tvar key = (iMin+iMax)/2;\n\n\t\tvar xTarget = frame/this.interval;\n\t\tvar xCurrent = this.lookupX[key];\n\n\t\tvar i = 0;\n\n\t\twhile (Math.abs(xTarget-xCurrent) > tolerance){\n\t\t\ti++;\n\t\t\t\n\t\t\tif (xCurrent > xTarget) {\n\t\t\t\tiMax = key;\n\t\t\t} else if (xCurrent < xTarget) {\n\t\t\t\tiMin = key;\n\t\t\t}\n\t\t\tkey = Math.round((iMin+iMax)/2);\n\t\t\txCurrent = this.lookupX[key];\n\n\t\t\tif (i > 20) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.lookupY[key];\n\n\t};\n\tLine.prototype.createLUT = function() {\n\t\t\n\t\tthis.lookupX = [];\n\t\tthis.lookupY = [];\n\n\t//\tthis.ctx.fillStyle = '#a50';\n\n\t\t//Percent Based Tesselation\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tvar p1 = this.points[i-1];\n\t\t\tvar p2 = this.points[i];\n\t\t\tvar pct = (p2.position.x/this.cw) - (p1.position.x/this.cw);\n\t\t\tfor (var t = 0; t < 1; t+=1/(5000*pct)) {\n\t\t\t\tvar x = (Math.pow((1-t),3)*p1.position.x) + (3*Math.pow((1-t),2)*t*p1.cp2.x) + (3*(1-t)*Math.pow(t,2)*p2.cp1.x) + (Math.pow(t,3)*p2.position.x);\n\t\t\t\tvar y = (Math.pow((1-t),3)*p1.position.y) + (3*Math.pow((1-t),2)*t*p1.cp2.y) + (3*(1-t)*Math.pow(t,2)*p2.cp1.y) + (Math.pow(t,3)*p2.position.y);\n\t\t\t\tthis.lookupX.push(x/this.cw);\n\t\t\t\tthis.lookupY.push(-y/this.ch+1);\n\t//\t\t\tthis.ctx.fillRect(x, y, 3, 3);\n\t\t\t}\n\t\t}\n\n\t};\n\tLine.prototype.canvasEvents = function() {\n\n\t\tvar x,\n\t\t\ty,\n\t\t\tdist,\n\t\t\tdragReady,\n\t\t\tdragCP,\n\t\t\tdraging;\n\n\t\tvar _this = this;\n\t\t\n\t\t$(this.ctx.canvas).on('mousemove', function(evt){\n\n\t\t\tx = evt.clientX - $(this).offset().left;\n\t\t\ty = evt.clientY - $(this).offset().top;\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\n\t\t\t\tif (!draging) {\n\n\t\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdist = Math.sqrt((x-p.cp1.x)*(x-p.cp1.x) + (y-p.cp1.y)*(y-p.cp1.y));\n\t\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\tdragCP = 'cp1';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdist = Math.sqrt((x-p.cp2.x)*(x-p.cp2.x) + (y-p.cp2.y)*(y-p.cp2.y));\n\t\t\t\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\t\tdragCP = 'cp2';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(this).css('cursor', 'initial');\n\t\t\t\t\t\t\t\tdragReady = false;\n\t\t\t\t\t\t\t\tdragCP = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (keys[18]) {\n\t\t\t\tvar deltaW = _this.cw / 20;\n\t\t\t\tvar deltaH = _this.ch/ 10;\n\n\t\t\t\tvar posX = Math.floor((x+deltaW/2) / deltaW);\n\t\t\t\tvar posY = Math.floor((y+deltaH/2) / deltaH);\n\n\t\t\t\tx = deltaW * posX;\n\t\t\t\ty = deltaH * posY;\n\t\t\t}\n\n\t\t\t$('span').text('X: '+ x +', Y: '+ y);\n\n\t\t\tif (draging) {\n\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t_this.points[dragReady].cp1.x = x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t}\n\t\t\t\t} else if (dragCP == 'cp2') {\n\n\t\t\t\t\t_this.points[dragReady].cp2.x = x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t_this.points[dragReady].position.x = x;\n\t\t\t\t\t_this.points[dragReady].position.y = y;\n\n\t\t\t\t\tif (dragReady === 0) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (dragReady == _this.points.length-1) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t}\n\n\t\t\t\t\t_this.points[dragReady].cp1.x = _this.points[dragReady].position.x + _this.points[dragReady].v1x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = _this.points[dragReady].position.y + _this.points[dragReady].v1y;\n\t\t\t\t\t_this.points[dragReady].cp2.x = _this.points[dragReady].position.x + _this.points[dragReady].v2x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = _this.points[dragReady].position.y + _this.points[dragReady].v2y;\n\n\t\t\t\t\tvar temp;\n\n\t\t\t\t\tif (_this.points[dragReady-1] && _this.points[dragReady+1]) {\n\t\t\t\t\t\tif (_this.points[dragReady].position.x > _this.points[dragReady+1].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady+1];\n\t\t\t\t\t\t\t_this.points[dragReady+1] = temp;\n\t\t\t\t\t\t\tdragReady++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (_this.points[dragReady-1].position.x > _this.points[dragReady].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady-1];\n\t\t\t\t\t\t\t_this.points[dragReady-1] = temp;\n\t\t\t\t\t\t\tdragReady--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_this.draw();\n\t\t\t}\n\n\t\t}).on('mousedown', function(evt){\n\t\t\tevt.preventDefault();\n\n\t\t\tif (dragReady || dragReady === 0) {\n\t\t\t\tdraging = true;\n\t\t\t} else {\n\t\t\t\tif (dist > 5) {\n\t\t\t\t\tdragReady = _this.addPoint(x, y);\n\t\t\t\t\tdraging = true;\n\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\t_this.draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).on('mouseup', function(evt){\n\n\t\t\tdraging = false;\n\t\t\tif (dist > 5) {\n\t\t\t\tdragReady = dragCP = false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\tif (dist <= 5) {\n\t\t\t\t\t$(this).css('cursor', 'pointer');\n\t\t\t\t\tdragReady = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.createLUT();\n\n\t\t}).on('mouseleave', function(evt){\n\n\t\t\tif (draging) {\n\t\t\t\tif (evt.offsetX < 0 || evt.offsetX > _this.cw) {\n\t\t\t\t\tif (evt.offsetX < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (evt.offsetY < 0 || evt.offsetY > _this.ch) {\n\t\t\t\t\tif (evt.offsetY < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = _this.ch;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\n\t\t\tdraging = dragReady = dragCP = false;\n\n\t\t}).on('click', function(evt){\n\t\t\tif (keys[16] && !dragCP) {\n\t\t\t\t_this.points[dragReady].collapse();\n\t\t\t\t_this.draw();\n\t\t\t\t_this.createLUT();\n\t\t\t}\n\t\t}).on('dblclick', function(evt){\n\t\t\t_this.points.splice(dragReady, 1);\n\t\t\tdraging = dragReady = dragCP = false;\n\t\t\tdist = 1000;\n\t\t\t$(this).css('cursor', 'initial');\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\t\t});\n\n\t};\n\tLine.prototype.addPoint = function(x, y) {\n\t\t\n\t\tthis.points.push(new BezierPoint(x, y, this.ctx, this.cpDist));\n\n\t\tthis.points.sort(function(a, b){\n\t\t\treturn a.position.x - b.position.x;\n\t\t});\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tif (x == p.position.x && y == p.position.y) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t};\n\tLine.prototype.draw = function() {\n\t\t\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\t\t\n\t\tthis.ctx.strokeStyle = '#444';\n\t\tthis.ctx.lineWidth = 1;\n\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/10)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/10)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 5; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.lineWidth = 0.5;\n\t\tfor (i = 1; i < 20; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/20)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/20)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.strokeStyle = '#fff';\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.points[0].position.x, this.points[0].position.y);\n\t\tfor (i = 1; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tvar pP = this.points[i-1];\n\t\t\tthis.ctx.bezierCurveTo(pP.cp2.x, pP.cp2.y, p.cp1.x, p.cp1.y, p.position.x, p.position.y);\n\t\t}\n\t\tthis.ctx.stroke();\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tthis.points[i].draw();\n\t\t}\n\n\t};\n\n\n\n\n\tvar keys = [];\n\twindow.addEventListener('keydown', function(e){\n\t\tkeys[e.keyCode] = true;\n\t});\n\twindow.addEventListener('keyup', function(e){\n\t\tdelete keys[e.keyCode];\n\t});\n\n\treturn Line;\n\n});\n","define('main',['modules/Line'], function(Line){\n\t\n\treturn Line;\n\n});\n"],"sourceRoot":"/source/"}